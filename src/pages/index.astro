---
import ImageMod from '@/components/ImageMod.astro';
import Base from '@/layouts/Base.astro';
import { markdownify } from '@/lib/utils/textConverter';
import CallToAction from '@/partials/CallToAction.astro';
import Testimonial from '@/partials/Testimonial.astro';
import type { Button, Feature } from '@/types';
import { getEntry } from 'astro:content';
import { FaCheck } from 'react-icons/fa';

interface Homepage {
  banner: {
    title: string;
    content: string;
    image: string;
    button: Button;
  };
  features: Feature[];
}

const homepage = await getEntry('homepage', '-index');
const testimonial = await getEntry('sections', 'testimonial');
const call_to_action = await getEntry('sections', 'call-to-action');
const { banner, features }: Homepage = homepage.data;
---

<Base>
  <!-- Banner -->
  <!-- Banner -->
  <section class='section pt-1 md:p-0 sm:pb-1'>
    <div class='relative'>
      <div
        class='absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 md:top-[30%] text-white w-full max-w-md text-center z-20'
      >
        <h1
          set:html={markdownify(banner.title)}
          class='text-3xl sm:text-2xl md:text-4xl font-bold mb-4 text-white'
        />
        {
          banner.button.enable && (
            <a
              href={banner.button.link}
              target='_blank'
              rel='noopener noreferrer'
              class='inline-block px-8 py-3 rounded-full border-2 border-white text-white bg-transparent hover:bg-white hover:text-blue-600 transition duration-300'
            >
              {banner.button.label}
            </a>
          )
        }
      </div>

      {
        banner.image && (
          <div class='relative'>
            {/* {banner.base64 && (
          <div
            class="absolute inset-0 blur-sm"
            style={`background-image: url(${banner.base64}); background-size: cover; background-position: center;`}
            aria-hidden="true"
          />
        )} */}
            <ImageMod
              loading={'eager'}
              src={banner.image}
              widths={[400, 800, 1200, 1920]}
              sizes='(max-width: 600px) 400px, (max-width: 1200px) 800px, (max-width: 1920px) 1200px, 1920px'
              alt='banner'
              format='webp'
              quality={90}
              class='hero-image'
            />
          </div>
        )
      }
    </div>
  </section>
  <!-- /Banner -->

  <!-- Features -->
  {
    features.map((feature, index: number) => (
      <section class={`section-sm pt-0 ${index % 2 === 0 && 'bg-gradient'}`}>
        <div class='container'>
          <div class='row items-center justify-between'>
            <div
              class={`mb:md-0 mb-6 md:col-5 ${index % 2 !== 0 && 'md:order-2'}`}
            >
              <ImageMod
                loading={'eager'}
                src={feature.image}
                height={480}
                width={520}
                alt={feature.title}
                format='webp'
              />
            </div>
            <div class={`md:col-7 lg:col-6 ${index % 2 !== 0 && 'md:order-1'}`}>
              <h2 set:html={markdownify(feature.title)} class='mb-4' />
              <p set:html={markdownify(feature.content)} class='mb-8 text-lg' />
              <ul>
                {feature.bulletpoints.map((bullet: string) => (
                  <li class='relative mb-4 pl-6'>
                    <FaCheck className={'absolute left-0 top-1.5'} />
                    <span set:html={markdownify(bullet)} />
                  </li>
                ))}
              </ul>
              {feature.button.enable && (
                <a class='btn btn-primary mt-5' href={feature.button.link}>
                  {feature.button.label}
                </a>
              )}
            </div>
          </div>
        </div>
      </section>
    ))
  }
  <!-- /Features -->

  <Testimonial testimonial={testimonial} />
  <!-- <CallToAction call_to_action={call_to_action} /> -->
</Base>
